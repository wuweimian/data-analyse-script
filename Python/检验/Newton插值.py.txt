# -*- coding: utf-8 -*-
import pandas as pd
import numpy as np
from scipy.interpolate import lagrange
import report
import genvs as GENV
G_ENV = GENV.GENVS()


"""
@brief: 获得牛顿插值函数
@
"""
def get_Newton_inter(X,Y,init=5):
    sum = Y[0]
    temp = np.zeros((len(X), len(X)))

    # 将第一行赋值
    for i in range(0, len(X)):
        temp[i, 0] = Y[i]

    temp_sum = 1.0
    for i in range(1, len(X)):
        # x的多项式
        temp_sum = temp_sum * (init - X[i - 1])

        # 计算均差
        for j in range(i, len(X)):
            temp[j, i] = (temp[j, i - 1] - temp[j - 1, i - 1]) / (X[j] - X[j - i])
        sum += temp_sum * temp[i, i]
    return sum


"""
牛顿插值调用函数
"""
def newton_inserp_main(col):
    # 获取数据
    data = G_ENV.get_features_data(col)

    for i in data.columns:
        for j in range(len(data)):
            if(data[i].isnull())[j]:
                data[i][j] = get_Newton_inter(data[i],j)

    # 保存前五行数据预览
    report.savedataframe(G_ENV.get_result_dir(), "牛顿插值结果", data.head())
    # 生成报告
    report.createhtml("牛顿插值结果", G_ENV.get_result_dir())
