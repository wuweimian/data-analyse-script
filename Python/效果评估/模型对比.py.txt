import genvs as GENV
G_ENV = GENV.GENVS()
import report
import os
import shutil

def iter_files(rootDir,des_dir):
    return_arr = []
    #遍历根目录
    arr = ["测试集结果","混淆矩阵","ROC","K-S曲线"]
    for root,dirs,files in os.walk(rootDir):
        for file in files:
            file_name = os.path.join(root,file)
            name = file_name.split('.')
            for i in range(len(arr)):
                if arr[i] in file_name:
                    # 按效果类型创建目录，复制效果文件
                    target_dir = des_dir + arr[i] + "/"
                    if not os.path.exists(target_dir):
                        os.makedirs(target_dir)
                    return_arr.append(target_dir)
                    target_dir_file = target_dir  + file_name.split("\\")[-1]
                    # 不复制target_dir目录文件
                    if os.path.exists(target_dir_file):
                        pass
                    else:
                        shutil.copyfile(file_name, target_dir_file)

        for dirname in dirs:
            #递归调用自身
            iter_files(dirname,des_dir)

    return return_arr


def model_compare(flag):
    des_dir = G_ENV.baseDir + "/" + G_ENV.projectId + "/" + G_ENV.jobId + "/" + G_ENV.instanceId + "/运行结果/"
    root_dir = G_ENV.baseDir + "/" + G_ENV.projectId + "/"

    # 遍历项目目录及复制效果文件
    target_dir = des_dir + "resource/"
    iter_files(root_dir,target_dir)

    # 生成报告
    report.createhtml_model_compare("运行结果",des_dir)

if __name__ == '__main__':
    # flag=1是分类，flag=2是回归
    flag="1"
    model_compare(flag)

