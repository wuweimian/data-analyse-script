# -*- coding: utf-8 -*-


import genvs as GENV
G_ENV = GENV.GENVS()

import pandas as pd
import sklearn.metrics
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.cluster import AgglomerativeClustering
from sklearn.metrics import accuracy_score
from sklearn.metrics import classification_report
import report

def show_data_head(des_dir, n=10):
    df = G_ENV.get_features_data_all().head(n)
    report.savedataframe(des_dir, "特征数据预览", df)


"""
affinity为距离类型
参数有：
euclidean：欧式距离（默认值）
"l1", 
"l2",
"manhattan", 曼哈顿距离
 "cosine",
 'precomputed'
如果linkage是"ward",那只有"euclidean" （欧式距离）
"""
def hierarchy_cluster(x_col,affinity='euclidean', compute_full_tree='auto',
            connectivity=None, linkage='ward', memory=None, n_clusters=3,
            pooling_func='deprecated'):
    col = x_col
    df_dir = G_ENV.baseDir + "/" + G_ENV.projectId + "/work_file/iris.txt"
    df = pd.read_csv(df_dir, sep='|')
    array = np.array(df)
    clustering = AgglomerativeClustering(affinity=affinity, compute_full_tree=compute_full_tree,
                            connectivity=connectivity, linkage=linkage, memory=memory, n_clusters=n_clusters,
                            pooling_func=pooling_func)
    result = clustering.fit(array)
    #持久化
    from sklearn.metrics import calinski_harabaz_score
    ch = calinski_harabaz_score(array,clustering.fit_predict(array))
    print(ch)
    print(result)
    #生成报告
    report.createhtml("运行结果", G_ENV.get_result_dir())

########################################################################################
# 以下是模板
if (__name__ == '__main__') & ('XXJOB' not in globals()):
    G_ENV.baseDir="C:/Users/Tim/Desktop/automodel/V2/data"
    G_ENV.projectId = "projectId"
    G_ENV.jobId="jobId"
    G_ENV.instanceId="instanceId"
    x_col = "sepal_length|sepal_width|petal_length|petal_width"

    hierarchy_cluster(x_col)